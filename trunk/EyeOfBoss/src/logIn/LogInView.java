/*
 * LogInView.java
 */
package logIn;

import java.awt.event.WindowEvent;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFrame;
import java.sql.*;
import database.DBConn;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.jdesktop.jdic.desktop.*;

/**
 * The application's main frame.
 */
public class LogInView extends FrameView implements WindowListener{

    public LogInView(SingleFrameApplication app) {
        super(app);

        initComponents();
        
        
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        
        
        
        
        
        
        //Uniemożliwienie maksymalizacji okna logowania
        this.getFrame().setResizable( false );
        
        //Uzupełnij dane na okienku. 
        getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        SwingUtilities.invokeLater(new Runnable(){
            @SuppressWarnings("empty-statement")
        public void run(){
            
            
            try {
                
                Connection conn = DBConn.getConnection();
                if (conn==null) return;
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("Select * from uprawnienia");
                while (rs.next()) 
                    funkcjeComboBox.addItem(rs.getString(3));

            }
            catch (Exception e) {
                System.out.println(e.getMessage());
            }
            getComponent().setCursor(Cursor.getDefaultCursor());
        }
        });
          

    }

    JFrame newFrame=null;
    JFrame old=null;
    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = LogIn.getApplication().getMainFrame();
            aboutBox = new LogInAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        LogIn.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPasswordField1 = new javax.swing.JPasswordField();
        loginTextField = new javax.swing.JTextField();
        funkcjeComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        helpMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(logIn.LogIn.class).getContext().getResourceMap(LogInView.class);
        jPasswordField1.setText(resourceMap.getString("jPasswordField1.text")); // NOI18N
        jPasswordField1.setName("jPasswordField1"); // NOI18N

        loginTextField.setText(resourceMap.getString("loginTextField.text")); // NOI18N
        loginTextField.setName("loginTextField"); // NOI18N

        funkcjeComboBox.setName("funkcjeComboBox"); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(36, 13));
        jLabel2.setMinimumSize(new java.awt.Dimension(36, 13));
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okButtonMouseClicked(evt);
            }
        });
        okButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                okButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)))
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(funkcjeComboBox, 0, 147, Short.MAX_VALUE)
                            .addComponent(loginTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(okButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(funkcjeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(logIn.LogIn.class).getContext().getActionMap(LogInView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        helpMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        helpMenuItem.setText(resourceMap.getString("helpMenuItem.text")); // NOI18N
        helpMenuItem.setName("helpMenuItem"); // NOI18N
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents
    private void okButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okButtonMouseClicked
    // TODO add your handling code here:
    // Funkcja łączy się z bazą danych, sprawdza czy użytkownik o podanym loginie i funkcji istnieje, i czy hasło jest prawidłowe
    // Następnie pobiera informacje o użytkowniku z bazy. I uruchamia odpowiednią formatkę.
        
        try{
             PreparedStatement pstmt=DBConn.getConnection().prepareStatement("SELECT id_uzytkownika, password, id_uprawnienia, id_pracownika FROM uzytkownik u JOIN uprawnienia up USING(id_uprawnienia) WHERE u.login = ? and up.opis_uprawnienia = ?");
             pstmt.setString(1, loginTextField.getText());
             pstmt.setString(2, funkcjeComboBox.getSelectedItem().toString());
             ResultSet rs =pstmt.executeQuery();
           
             if (rs.next()){
                 StringBuilder str=new StringBuilder();
                 str.append(jPasswordField1.getPassword());
                 if (str.toString().equals(rs.getString(2))){
                     Integer id_uprawnienia = rs.getInt(3);
                     Integer id_uzytkownika = rs.getInt(1);
                     Integer id_pracownika=rs.getInt(4);
                     
                     
                     pstmt= DBConn.getConnection().prepareStatement(
                     "SELECT " +
                     "imie, nazwisko, data_zatrudnienia, data_zwolnienia, miasto,adres, telefon, email, id_stawki, id_zmiany " +
                     "FROM Pracownik WHERE id_pracownika = ?");
                     pstmt.setInt(1, id_pracownika);
                     rs=pstmt.executeQuery();
                     if (!rs.next()) return;
                     System.out.println("You are logged in ");
                     User usr=User.getUser(jPasswordField1.getPassword().toString());
                     usr.setId(id_pracownika);
                     usr.setImie(rs.getString("imie"));
                     usr.setNazwisko(rs.getString("nazwisko"));
                     usr.setDataZatrudnienia(rs.getDate("data_zatrudnienia"));
                     usr.setDataZwolnienia(rs.getDate("data_zwolnienia"));
                     usr.setMiasto(rs.getString("miasto"));
                     usr.setAdres(rs.getString("adres"));
                     usr.setEmail(rs.getString("email"));
                     usr.setTelefon(rs.getInt("telefon"));
                     usr.setIdStawki(rs.getInt(9));
                     usr.setShiftId(rs.getInt(10));

                     String title=new String("EyeOfBoss- ");
                     switch(id_uprawnienia){
                         case 0:
                             newFrame=new boss.BossFrame();
                             title=title+" SZEF";
                             break;
                         case 1:
                             newFrame=new administrator.AdminFrame();
                             title=title+" ADMINISTRATOR";
                             break;
                         case 2:
                             newFrame = new personnel.PersonnelFrame();
                             title=title+" KADROWY";
                             break;
                         case 3:
                             newFrame=new employee.EmployeeFrame();
                             title=title+" PRACOWNIK";
                             break;
                                    
                     }
                    if (newFrame!=null) newFrame.setVisible(true);
                    
                    try{
                    newFrame.addWindowListener(this);
                    newFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
                    old=getFrame();
                    getFrame().setVisible(false);
                    newFrame.setTitle(title);
                    setFrame(newFrame);
                    newFrame.addWindowListener(this);
                    
                    
                    }
                    catch(Exception e){
                        
                    }
                 }
                 else JOptionPane.showMessageDialog(old,"Blędne hasło","Błąd",JOptionPane.ERROR_MESSAGE);
                        
             }else JOptionPane.showMessageDialog(old,"Blędny login","Błąd",JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException e){
            System.out.println(e.getMessage());
        }
        catch(NullPointerException e){
           JOptionPane.showMessageDialog(old,"Nie podałeś hasła","Błąd",JOptionPane.ERROR_MESSAGE);
           e.printStackTrace(); 
        }     
}//GEN-LAST:event_okButtonMouseClicked

private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
//uruchamia przeglądarkę i wyświetla helpa
    try {
        java.net.URI uri=new java.net.URI("file",null,"///"+System.getProperty("user.dir")+System.getProperty("file.separator")+"WebHelp"+System.getProperty("file.separator")+"index.html",null);
        org.jdesktop.jdic.desktop.Desktop.browse(uri.toURL());
        
    } catch (URISyntaxException ex) {//GEN-LAST:event_helpMenuItemActionPerformed

        Logger.getLogger(LogInView.class.getName()).log(Level.SEVERE, null, ex);
    } catch (MalformedURLException ex) {
        Logger.getLogger(LogInView.class.getName()).log(Level.SEVERE, null, ex);
    } catch (DesktopException ex) {
        Logger.getLogger(LogInView.class.getName()).log(Level.SEVERE, null, ex);
    }
}

private void okButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_okButtonKeyPressed
    if (evt.getKeyCode()==KeyEvent.VK_ENTER) okButtonMouseClicked(null);
}//GEN-LAST:event_okButtonKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox funkcjeComboBox;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField loginTextField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private JDialog aboutBox;

    public void windowOpened(WindowEvent e) {
        
    }

    public void windowClosing(WindowEvent e) {
        
        newFrame.setVisible(true);
                
        old.setVisible(true);
        loginTextField.setText("");
        jPasswordField1.setText("");
        

    }

    public void windowClosed(WindowEvent e) {

    }

    public void windowIconified(WindowEvent e) {

    }

    public void windowDeiconified(WindowEvent e) {

    }

    public void windowActivated(WindowEvent e) {

    }

    public void windowDeactivated(WindowEvent e) {
        
    }
}
