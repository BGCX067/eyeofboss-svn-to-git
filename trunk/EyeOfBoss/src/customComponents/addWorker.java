/*
 * searchWorker.java
 *
 * Created on 4 czerwiec 2008, 13:07
 */
package customComponents;

import com.mysql.jdbc.Statement;
import java.text.ParseException;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JPanel;

import database.DBConn;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.text.DateFormat;
import javax.swing.border.Border;

/**
 *
 * @author  piotrek
 */
public class addWorker extends JPanel {

    /** Creates new form BeanForm */
    public addWorker() {
        initComponents();
        initComponent();
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            javax.swing.JFrame frm = new javax.swing.JFrame("Komponent wyszukiwania");

            public void run() {
                frm.add(new addWorker());
                frm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frm.setVisible(true);
                frm.pack();
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTitle = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        surnameTextField = new javax.swing.JTextField();
        cityTextField = new javax.swing.JTextField();
        addrTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        functionComboBox = new javax.swing.JComboBox();
        firstDayTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        surnameLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        addLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        firstDayLabel = new javax.swing.JLabel();
        functionLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        password2Label = new javax.swing.JLabel();
        userTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        password2TextField = new javax.swing.JPasswordField();

        setName("Form"); // NOI18N

        searchTitle.setName("searchTitle"); // NOI18N

        nameTextField.setName("nameTextField"); // NOI18N
        nameTextField.setNextFocusableComponent(surnameTextField);

        surnameTextField.setName("surnameTextField"); // NOI18N
        surnameTextField.setNextFocusableComponent(cityTextField);

        cityTextField.setName("cityTextField"); // NOI18N
        cityTextField.setNextFocusableComponent(addrTextField);

        addrTextField.setName("addrTextField"); // NOI18N
        addrTextField.setNextFocusableComponent(emailTextField);

        emailTextField.setName("emailTextField"); // NOI18N
        emailTextField.setNextFocusableComponent(phoneTextField);

        functionComboBox.setName("functionComboBox"); // NOI18N

        firstDayTextField.setName("firstDayTextField"); // NOI18N
        firstDayTextField.setNextFocusableComponent(userTextField);

        phoneTextField.setName("phoneTextField"); // NOI18N
        phoneTextField.setNextFocusableComponent(firstDayTextField);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(logIn.LogIn.class).getContext().getResourceMap(addWorker.class);
        nameLabel.setText(resourceMap.getString("nameLabel.text")); // NOI18N
        nameLabel.setName("nameLabel"); // NOI18N

        surnameLabel.setText(resourceMap.getString("surnameLabel.text")); // NOI18N
        surnameLabel.setName("surnameLabel"); // NOI18N

        cityLabel.setText(resourceMap.getString("cityLabel.text")); // NOI18N
        cityLabel.setName("cityLabel"); // NOI18N

        addLabel.setText(resourceMap.getString("addLabel.text")); // NOI18N
        addLabel.setName("addLabel"); // NOI18N

        emailLabel.setText(resourceMap.getString("emailLabel.text")); // NOI18N
        emailLabel.setName("emailLabel"); // NOI18N

        phoneLabel.setText(resourceMap.getString("phoneLabel.text")); // NOI18N
        phoneLabel.setName("phoneLabel"); // NOI18N

        firstDayLabel.setText(resourceMap.getString("firstDayLabel.text")); // NOI18N
        firstDayLabel.setName("firstDayLabel"); // NOI18N

        functionLabel.setText(resourceMap.getString("functionLabel.text")); // NOI18N
        functionLabel.setName("functionLabel"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        userLabel.setText(resourceMap.getString("userLabel.text")); // NOI18N
        userLabel.setName("userLabel"); // NOI18N

        passwordLabel.setText(resourceMap.getString("passwordLabel.text")); // NOI18N
        passwordLabel.setName("passwordLabel"); // NOI18N

        password2Label.setText(resourceMap.getString("password2Label.text")); // NOI18N
        password2Label.setName("password2Label"); // NOI18N

        userTextField.setText(resourceMap.getString("userTextField.text")); // NOI18N
        userTextField.setName("userTextField"); // NOI18N
        userTextField.setNextFocusableComponent(passwordTextField);

        passwordTextField.setText(resourceMap.getString("passwordTextField.text")); // NOI18N
        passwordTextField.setName("passwordTextField"); // NOI18N
        passwordTextField.setNextFocusableComponent(password2TextField);

        password2TextField.setText(resourceMap.getString("password2TextField.text")); // NOI18N
        password2TextField.setName("password2TextField"); // NOI18N
        password2TextField.setNextFocusableComponent(nameTextField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(searchTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(surnameLabel)
                                            .addComponent(emailLabel)
                                            .addComponent(addLabel)
                                            .addComponent(cityLabel))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstDayLabel)
                                    .addComponent(functionLabel)
                                    .addComponent(phoneLabel))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(functionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(firstDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(password2Label)
                                                    .addComponent(passwordLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(password2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(userLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                                .addComponent(userTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(1, 1, 1))))
                            .addComponent(jLabel1))))
                .addContainerGap(58, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(searchTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneLabel))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(surnameLabel)
                            .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityLabel)
                            .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addLabel)
                            .addComponent(addrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLabel)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userLabel)
                            .addComponent(userTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstDayLabel)
                                    .addComponent(firstDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(password2Label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(functionLabel)
                                    .addComponent(functionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(password2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
    if (validateInput()) {
        Connection conn=null;
        try {
            DateFormat df =DateFormat.getDateInstance(); 
            Date date;
            
            conn=DBConn.getConnection();
            
            java.sql.PreparedStatement pstmt = conn.prepareStatement("SELECT MAX(id_pracownika) FROM Pracownik");
            ResultSet rs = pstmt.executeQuery();
            int newid = 0;
            if(rs.next()) {
                newid = rs.getInt(1);
            }
            newid++;
            
            pstmt = conn.prepareStatement("SELECT id_uprawnienia FROM uprawnienia WHERE opis_uprawnienia = ?");
            pstmt.setString(1, functionComboBox.getSelectedItem().toString());
            rs = pstmt.executeQuery();
            
            int privid = 0;
            if (rs.next()) {
                privid = rs.getInt(1);
            }
            
            conn.setTransactionIsolation(conn.TRANSACTION_READ_COMMITTED); 

            pstmt=conn.prepareStatement(
                    "INSERT INTO Pracownik (id_pracownika, imie, nazwisko, miasto, adres, email, telefon, data_zatrudnienia,id_zmiany,id_stawki) " +
                    "VALUES (?, ?, ?, ?, ?, ?, ?, ?,0,10)");
            
            pstmt.setInt(1, newid);
            pstmt.setString(2, nameTextField.getText());
            pstmt.setString(3, surnameTextField.getText());
            pstmt.setString(4, cityTextField.getText());
            pstmt.setString(5, addrTextField.getText());
            pstmt.setString(6, emailTextField.getText());
            
            Integer number = Integer.parseInt(phoneTextField.getText());
            
            pstmt.setInt(7, number);
            
            try {
                date = new java.sql.Date(df.parse(firstDayTextField.getText()).getTime());
            } catch (ParseException ex) {
                Logger.getLogger(addWorker.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
            pstmt.setDate(8, date);
            
            if(pstmt.execute()) {
                conn.rollback();
                return;
            }
            PreparedStatement stmt=conn.prepareStatement("SELECT MAX(id_uzytkownika) from uzytkownik");
            ResultSet rs2=stmt.executeQuery();
            int wrkID=0;
            if (rs.next()){
                wrkID=rs.getInt(1);
            }
            
            
            
            pstmt=conn.prepareStatement(
                    "INSERT INTO uzytkownik (id_uzytkownika,id_pracownika, id_uprawnienia, login, password)" +
                    "VALUES (?,?, ?, ?, ?)");
            pstmt.setInt(1, wrkID);
            pstmt.setInt(2, newid);
            pstmt.setInt(3, privid);
            pstmt.setString(4, userTextField.getText());
            pstmt.setString(5, passwordTextField.getText());
            
            if(pstmt.execute()) {
                conn.rollback();
                return;
            }
            
            conn.commit();
        }
        catch (SQLException ex){
                try {
                    conn.rollback();
                } catch (SQLException ex1) {
                    Logger.getLogger(addWorker.class.getName()).log(Level.SEVERE, null, ex1);
                }
             Logger.getLogger(addWorker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }     
}//GEN-LAST:event_jButton1MouseClicked

    private void initComponent() {
        Statement stmt = null;
        ResultSet rs = null;
        try {
            stmt = (Statement) DBConn.getConnection().createStatement();
            rs = stmt.executeQuery("select opis_uprawnienia from uprawnienia");
            while (rs.next()) {
                functionComboBox.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(addWorker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*
     * Sprawdza wejście(dane wpisane przez uzytkownika).
     */
    private boolean validateInput(){
        
    Boolean areErrors = false;
    Border red = new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true);
    Border green = new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 1, true);

        if (!Pattern.matches("[\\p{Space}a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]*", nameTextField.getText()) || nameTextField.getText().isEmpty()) {
            areErrors = true;
            nameTextField.setBorder(red);
        } else {
            nameTextField.setBorder(green);
        }
    

        if (!Pattern.matches("[\\-a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]*", surnameTextField.getText()) || surnameTextField.getText().isEmpty()) {
            areErrors = true;
            surnameTextField.setBorder(red);
        } else {
            surnameTextField.setBorder(green);
        }
    

        if (!Pattern.matches("[\\p{Space}\\-a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]*", cityTextField.getText()) || cityTextField.getText().isEmpty()) {
            areErrors = true;
            cityTextField.setBorder(red);
        } else {
            cityTextField.setBorder(green);
        
    }

        if (!Pattern.matches("[\\x2F\\p{Space}\\-a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ\\.0-9\\x5C]*", addrTextField.getText()) || addrTextField.getText().isEmpty()) {
            areErrors = true;
            addrTextField.setBorder(red);
        } else {
            addrTextField.setBorder(green);
        }
    

        if (!Pattern.matches("[0-9]*", phoneTextField.getText()) || phoneTextField.getText().isEmpty()) {
            areErrors = true;
            phoneTextField.setBorder(red);
        } else {
            phoneTextField.setBorder(green);
        }
    
        if (userTextField.getText().isEmpty()) {
            areErrors = true;
            userTextField.setBorder(red);
        } else {
            userTextField.setBorder(green);
        }
    
        if (passwordTextField.getText().isEmpty()) {
            areErrors = true;
            passwordTextField.setBorder(red);
        } else {
            if (passwordTextField.getText().equals(password2TextField.getText())) {
                passwordTextField.setBorder(green);
                password2TextField.setBorder(green);
            } else {
                areErrors = true;
                passwordTextField.setBorder(red);
                password2TextField.setBorder(red);
            }
        }
    
        if (password2TextField.getText().isEmpty()) {
            areErrors = true;
            password2TextField.setBorder(red);
        } else {
            if (passwordTextField.getText().equals(password2TextField.getText())) {
                passwordTextField.setBorder(green);
                password2TextField.setBorder(green);
            } else {
                areErrors = true;
                passwordTextField.setBorder(red);
                password2TextField.setBorder(red);
            }
        }
    
    


        String regexemail = "^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[_A-Za-z0-9-]+)";
        if (!Pattern.matches(regexemail, emailTextField.getText()) || emailTextField.getText().isEmpty()) {
            areErrors = true;
            emailTextField.setBorder(red);
        } else {
            emailTextField.setBorder(green);
        }
    


        if (!Pattern.matches("[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}", firstDayTextField.getText()) || firstDayTextField.getText().isEmpty()) {
            areErrors = true;
            firstDayTextField.setBorder(red);
        } else {
            //sprawdź jeszcze, czy miesiąc mniejszy od 1 do 12
            char tab[] = {0, 0};
            firstDayTextField.getText().getChars(5, 7, tab, 0);

            String s = new String(tab);
            Integer i = Integer.parseInt(s);
            firstDayTextField.getText().getChars(8, 10, tab, 0);
            s = new String(tab);
            Integer d = Integer.parseInt(s);
            if ((i < 1) || (i > 12) || (d < 1) || (d > 31)) {
                areErrors = true;
                firstDayTextField.setBorder(red);
            } else {
                firstDayTextField.setBorder(green);
            }
        }
    
    return !areErrors;
    }


    /**
     * Po naciśnięciu szukaj, ozpocznij wyszukanie pracowników.
     * @param evt
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel addLabel;
    public javax.swing.JTextField addrTextField;
    public javax.swing.JLabel cityLabel;
    public javax.swing.JTextField cityTextField;
    public javax.swing.JLabel emailLabel;
    public javax.swing.JTextField emailTextField;
    public javax.swing.JLabel firstDayLabel;
    public javax.swing.JTextField firstDayTextField;
    public javax.swing.JComboBox functionComboBox;
    public javax.swing.JLabel functionLabel;
    public javax.swing.JButton jButton1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel nameLabel;
    public javax.swing.JTextField nameTextField;
    public javax.swing.JLabel password2Label;
    public javax.swing.JPasswordField password2TextField;
    public javax.swing.JLabel passwordLabel;
    public javax.swing.JPasswordField passwordTextField;
    public javax.swing.JLabel phoneLabel;
    public javax.swing.JTextField phoneTextField;
    public javax.swing.JLabel searchTitle;
    public javax.swing.JLabel surnameLabel;
    public javax.swing.JTextField surnameTextField;
    public javax.swing.JLabel userLabel;
    public javax.swing.JTextField userTextField;
    // End of variables declaration//GEN-END:variables
}
