package boss;

import customComponents.Schedule;
import java.awt.event.ActionListener;
import javax.swing.SwingUtilities;
import database.DBConn;

/*
 * BossFrame.java
 *
 * Created on 8 kwiecień 2008, 19:37
 */
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import logIn.User;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import personnel.PersonnelFrame;

/**
 *
 * @author  Łukasz Spintzyk
 */
public class BossFrame extends javax.swing.JFrame {
    // elementy do wyszukiwania pracownika
    private javax.swing.JCheckBox[] FindCheckBox;
    private javax.swing.JTextField[] FindTextField;
    
    private User usr=new User();
    
    /** Creates new form BossFrame */
    public BossFrame() {
        usr.setId(-1);
        initComponents();
        Calendar cal = Calendar.getInstance();
        for (int i = 1; i < 13; i++) {
            shiftSchedule1.addToMonthComboBox(i);
        }
        int month=cal.get(Calendar.MONTH)+1;
        shiftSchedule1.monthComboBox.setSelectedIndex(month-1);

        
        shiftSchedule1.addToYearComboBox(cal.get(Calendar.YEAR));
        shiftSchedule1.addToYearComboBox(cal.get(Calendar.YEAR + 1));

        actionWorker = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if (!e.getActionCommand().equals("WORKER_SET")) {
                    return;
                }
                
                PreparedStatement pstmt = null;
                try {
                    pstmt = DBConn.getConnection().prepareStatement(
                            "SELECT imie, nazwisko, data_zatrudnienia, data_zwolnienia, miasto,adres, telefon, email, id_stawki, id_zmiany " +
                            "FROM Pracownik WHERE id_pracownika = ?");

                    pstmt.setInt(1, e.getID());
                    ResultSet rs = pstmt.executeQuery();
                    if (rs.next()) {


                        usr.setId(e.getID());

                        usr.setImie(rs.getString("imie"));
                        usr.setNazwisko(rs.getString("nazwisko"));
                        usr.setDataZatrudnienia(rs.getDate("data_zatrudnienia"));
                        usr.setDataZwolnienia(rs.getDate("data_zwolnienia"));
                        usr.setMiasto(rs.getString("miasto"));
                        usr.setAdres(rs.getString("adres"));
                        usr.setEmail(rs.getString("email"));
                        usr.setTelefon(rs.getInt("telefon"));
                        usr.setIdStawki(rs.getInt(9));
                        usr.setShiftId(rs.getInt(10));

                    }
                    rs.close();
                    pstmt.close();
                    shiftSchedule1.clearSchedule();
                    shiftSchedule1.setWorkerId(usr.getId());
                    
                    List<Integer> l = new ArrayList<Integer>(1);
                    l.add(usr.getShiftId());
                    shiftSchedule1.setShiftID(l);
                    shiftSchedule1.setGrafik(true);
                    shiftSchedule1.setFreeTime(true);
                    shiftSchedule1.setLates(true);
                    
                    shiftSchedule1.repaintSchedule();

                } catch (SQLException ex) {
                    Logger.getLogger(PersonnelFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        searchWorker1.addActionListener(actionWorker);
    }
    
    ActionListener actionWorker=null;
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        workerPanel = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        searchWorker1 = new customComponents.searchWorker();
        shiftSchedule1 = new customComponents.ShiftSchedule();
        grantBonusTextField = new javax.swing.JTextField();
        grantBonuLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        forWhatTextArea = new javax.swing.JTextArea();
        grantBonusButton = new javax.swing.JButton();
        statisticsPanel = new javax.swing.JPanel();
        avgSalaryButton = new javax.swing.JButton();
        latesButton = new javax.swing.JButton();
        workersButton = new javax.swing.JButton();
        workHoursButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(logIn.LogIn.class).getContext().getResourceMap(BossFrame.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        workerPanel.setName("workerPanel"); // NOI18N

        jSeparator5.setName("jSeparator5"); // NOI18N

        jSeparator7.setName("jSeparator7"); // NOI18N

        searchWorker1.setName("searchWorker1"); // NOI18N

        shiftSchedule1.setName("shiftSchedule1"); // NOI18N

        grantBonusTextField.setText(resourceMap.getString("grantBonusTextField.text")); // NOI18N
        grantBonusTextField.setName("grantBonusTextField"); // NOI18N

        grantBonuLabel.setText(resourceMap.getString("grantBonuLabel.text")); // NOI18N
        grantBonuLabel.setName("grantBonuLabel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        forWhatTextArea.setColumns(20);
        forWhatTextArea.setRows(5);
        forWhatTextArea.setText(resourceMap.getString("forWhatTextArea.text")); // NOI18N
        forWhatTextArea.setName("forWhatTextArea"); // NOI18N
        jScrollPane1.setViewportView(forWhatTextArea);

        grantBonusButton.setIcon(resourceMap.getIcon("grantBonusButton.icon")); // NOI18N
        grantBonusButton.setText(resourceMap.getString("grantBonusButton.text")); // NOI18N
        grantBonusButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        grantBonusButton.setName("grantBonusButton"); // NOI18N
        grantBonusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grantBonusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout workerPanelLayout = new javax.swing.GroupLayout(workerPanel);
        workerPanel.setLayout(workerPanelLayout);
        workerPanelLayout.setHorizontalGroup(
            workerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchWorker1, javax.swing.GroupLayout.DEFAULT_SIZE, 910, Short.MAX_VALUE)
            .addGroup(workerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(workerPanelLayout.createSequentialGroup()
                        .addComponent(grantBonuLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(grantBonusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(grantBonusButton)
                .addContainerGap())
            .addGroup(workerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator7, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(workerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(shiftSchedule1, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                .addContainerGap())
        );
        workerPanelLayout.setVerticalGroup(
            workerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workerPanelLayout.createSequentialGroup()
                .addComponent(searchWorker1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(workerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(workerPanelLayout.createSequentialGroup()
                        .addGroup(workerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grantBonuLabel)
                            .addComponent(grantBonusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(grantBonusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shiftSchedule1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("workerPanel.TabConstraints.tabTitle"), workerPanel); // NOI18N

        statisticsPanel.setName("statisticsPanel"); // NOI18N

        avgSalaryButton.setIcon(resourceMap.getIcon("avgSalaryButton.icon")); // NOI18N
        avgSalaryButton.setText(resourceMap.getString("avgSalaryButton.text")); // NOI18N
        avgSalaryButton.setName("avgSalaryButton"); // NOI18N
        avgSalaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgSalaryButtonActionPerformed(evt);
            }
        });
        statisticsPanel.add(avgSalaryButton);

        latesButton.setIcon(resourceMap.getIcon("latesButton.icon")); // NOI18N
        latesButton.setText(resourceMap.getString("latesButton.text")); // NOI18N
        latesButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        latesButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        latesButton.setName("latesButton"); // NOI18N
        latesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latesButtonActionPerformed(evt);
            }
        });
        statisticsPanel.add(latesButton);

        workersButton.setIcon(resourceMap.getIcon("workersButton.icon")); // NOI18N
        workersButton.setText(resourceMap.getString("workersButton.text")); // NOI18N
        workersButton.setName("workersButton"); // NOI18N
        workersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workersButtonActionPerformed(evt);
            }
        });
        statisticsPanel.add(workersButton);

        workHoursButton.setIcon(resourceMap.getIcon("workHoursButton.icon")); // NOI18N
        workHoursButton.setText(resourceMap.getString("workHoursButton.text")); // NOI18N
        workHoursButton.setName("workHoursButton"); // NOI18N
        workHoursButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workHoursButtonActionPerformed(evt);
            }
        });
        statisticsPanel.add(workHoursButton);

        jTabbedPane1.addTab(resourceMap.getString("statisticsPanel.TabConstraints.tabTitle"), statisticsPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE))
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 915, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //przyznaj przemię zaznaczononemu użytkownikowi
private void grantBonusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grantBonusButtonActionPerformed
            Border red = new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true);
            Border green = new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 1, true);
            if (usr==null || usr.getId()<0) {
                grantBonusButton.setBorder(red);
                return;
            }
            if (!Pattern.matches("\\d{1,7}", grantBonusTextField.getText())) {
                grantBonusTextField.setBorder(red);
                return;
            } else {
                grantBonusTextField.setBorder(green);
            }
            if (Integer.parseInt(grantBonusTextField.getText())<=0) {
                grantBonusTextField.setBorder(red);
                return;
            }
            
            if (forWhatTextArea.getTabSize() > 10000 - 1) {
                forWhatTextArea.setText("ZA DŁUGA WIADOMOŚĆ, PONAD 10000 znaków" + forWhatTextArea.getText());
                forWhatTextArea.setBorder(red);
                return;
            } else {
                forWhatTextArea.setBorder(green);
            }
            if (usr == null) {
                JOptionPane.showMessageDialog(this, "Nie wybrano uztkownika");
                return;
            }
            try {

                PreparedStatement pstmt = DBConn.getConnection().prepareStatement("INSERT INTO Wyplaty (id_pracownika,kwota,data_od,za_co) values(?,?,CURDATE(),?)");
                pstmt.setInt(1, usr.getId());
                pstmt.setInt(2,Integer.parseInt(grantBonusTextField.getText()));
                pstmt.setString(3, forWhatTextArea.getText());
                pstmt.execute();
            } catch (SQLException ex) {
                Logger.getLogger(BossFrame.class.getName()).log(Level.SEVERE, null, ex);
            }


}//GEN-LAST:event_grantBonusButtonActionPerformed

private void avgSalaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgSalaryButtonActionPerformed
    try {

        HashMap params = new HashMap(1);
        JasperReport jrep = JasperCompileManager.compileReport("./jasperRaports/avgSalary.jrxml");
        JasperPrint jasperprint = JasperFillManager.fillReport(jrep, params, DBConn.getConnection());
        JasperViewer jv = new JasperViewer(jasperprint, false);
        jv.setVisible(true);
    } catch (JRException ex) {
        Logger.getLogger(BossFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_avgSalaryButtonActionPerformed

private void workersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workersButtonActionPerformed
    try {

        HashMap params = new HashMap(1);
        JasperReport jrep = JasperCompileManager.compileReport("./jasperRaports/pracownicy.jrxml");
        JasperPrint jasperprint = JasperFillManager.fillReport(jrep, params, DBConn.getConnection());
        JasperViewer jv = new JasperViewer(jasperprint, false);
        jv.setVisible(true);
    } catch (JRException ex) {
        Logger.getLogger(BossFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_workersButtonActionPerformed

private void latesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latesButtonActionPerformed
    try {
        HashMap<String,Integer> params = new HashMap<String,Integer>(3);
        params.put("id_zmiany", usr.getShiftId());
        params.put("year", (Integer)shiftSchedule1.yearComboBox.getSelectedItem());
        int month=1;
        for (month=0;month<Schedule.monthNames.length;month++)
            if (Schedule.monthNames[month].equals(shiftSchedule1.monthComboBox.getSelectedItem().toString())){
                month++; //bo numerujemy od zera
                break;
            }
        
        params.put("month",month);
        int czas_spoznien=0;
        int czas_nadgodzin=0;
        Connection conn = DBConn.getConnection();
            try {
                PreparedStatement stmt = conn.prepareStatement("SELECT sum(TIME_TO_SEC(czas_spoznienia)) FROM spoznienie WHERE id_pracownika=?");
                stmt.setInt(1, usr.getId());
                ResultSet rs=stmt.executeQuery();
                if(rs.next()){
                    czas_spoznien=rs.getInt(1);
                }
                
                stmt = conn.prepareStatement("SELECT sum(TIME_TO_SEC(czas)) FROM nadgodziny WHERE id_pracownika=?");
                stmt.setInt(1, usr.getId());
                rs=stmt.executeQuery();
                if(rs.next()){
                    czas_nadgodzin=rs.getInt(1);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(BossFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        params.put("czas_spoznienia",new Integer(czas_spoznien));
        params.put("czas_nagodzin",new Integer(czas_nadgodzin));
           
        JasperReport jrep = JasperCompileManager.compileReport("./jasperRaports/spoznienia_harmonogram.jrxml");
        JasperPrint jasperprint = JasperFillManager.fillReport(jrep, params, DBConn.getConnection());
        JasperViewer jv = new JasperViewer(jasperprint, false);
        jv.setVisible(true);
    } catch (JRException ex) {
        Logger.getLogger(BossFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_latesButtonActionPerformed

private void workHoursButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workHoursButtonActionPerformed
    try {

        HashMap params = new HashMap(1);
        JasperReport jrep = JasperCompileManager.compileReport("./jasperRaports/przepracowane_godziny.jrxml");
        JasperPrint jasperprint = JasperFillManager.fillReport(jrep, params, DBConn.getConnection());
        JasperViewer jv = new JasperViewer(jasperprint, false);
        jv.setVisible(true);
    } catch (JRException ex) {
        Logger.getLogger(BossFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_workHoursButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BossFrame bframe = new BossFrame();
                bframe.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton avgSalaryButton;
    private javax.swing.JTextArea forWhatTextArea;
    private javax.swing.JLabel grantBonuLabel;
    private javax.swing.JButton grantBonusButton;
    private javax.swing.JTextField grantBonusTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton latesButton;
    private customComponents.searchWorker searchWorker1;
    private customComponents.ShiftSchedule shiftSchedule1;
    private javax.swing.JPanel statisticsPanel;
    private javax.swing.JButton workHoursButton;
    private javax.swing.JPanel workerPanel;
    private javax.swing.JButton workersButton;
    // End of variables declaration//GEN-END:variables
    
}
